name: Release

on:
  push:
    tags:
      - '*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Download artifacts
        run: |
          COMMIT=$(git rev-list -n 1 ${{ github.ref }})
          gsutil cp gs://istio-ecosystem/wasm-extensions/basic-auth/${COMMIT}.wasm basic-auth.wasm
          gsutil cp gs://istio-ecosystem/wasm-extensions/local-rate-limit/${COMMIT}.wasm local-rate-limit.wasm
          gsutil cp gs://istio-ecosystem/wasm-extensions/open-policy-agent/${COMMIT}.wasm open-policy-agent.wasm
          # Also prepare an Wasm extension dir for GCS uploading.
          mkdir -p wasm-extensions/basic-auth
          mkdir -p wasm-extensions/local-rate-limit
          mkdir -p wasm-extensions/open-policy-agent
          GITHUB_TAG_REF=${{ github.ref }}
          cp basic-auth.wasm wasm-extensions/basic-auth/${GITHUB_TAG_REF##*/}.wasm
          cp local-rate-limit.wasm wasm-extensions/local-rate-limit/${GITHUB_TAG_REF##*/}.wasm
          cp open-policy-agent.wasm wasm-extensions/open-policy-agent/${GITHUB_TAG_REF##*/}.wasm
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Basic Auth Release Asset
        id: upload-basic-auth-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: ./basic-auth.wasm
          asset_name: basic-auth.wasm
          asset_content_type: application/wasm
      - name: Upload Local Rate Limit Release Asset
        id: upload-local-rate-limit-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./local-rate-limit.wasm
          asset_name: local-rate-limit.wasm
          asset_content_type: application/wasm
      - name: Upload Open Policy Agent Release Asset
        id: upload-open-policy-agent-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./open-policy-agent.wasm
          asset_name: open-policy-agent.wasm
          asset_content_type: application/wasm
      - name: Upload Modules
        uses: google-github-actions/upload-cloud-storage@main
        with:
          path: wasm-extensions/
          destination: istio-ecosystem
          credentials: ${{ secrets.WASM_UPLOAD_CRED }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Push Wasm OCI images
        run: |
          GITHUB_TAG_REF=${{ github.ref }}
          for target in $(bazel query //extensions/...); do
            if [[ "{$target}" == *":push_wasm_image"* ]]; then
              bazel run --define WASM_IMAGE_TAG=${GITHUB_TAG_REF##*/} "${target}"
            fi
          done
