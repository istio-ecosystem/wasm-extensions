name: Test

on:

  pull_request:
    branches:
    - master
    - release-[0-9]+.[0-9]+

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Mount bazel cache
      uses: actions/cache@v1
      with:
        path: "/home/runner/.cache/bazel"
        key: bazel

    - name: Install bazelisk
      run: |
        curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.6.1/bazelisk-linux-amd64"
        mkdir -p "${GITHUB_WORKSPACE}/bin/"
        mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
        chmod +x "${GITHUB_WORKSPACE}/bin/bazel"
    
    - uses: actions/setup-go@v2
      with:
        go-version: '^1.16.0'

    - name: Build file format (buildifier)
      run: |
        go get -u github.com/bazelbuild/buildtools/buildifier
        export PATH=$PATH:$(go env GOPATH)/bin
        find . -name "BUILD" | xargs -n1 buildifier -mode=check

    - name: Build
      run: |
        set -eux

        for target in $(bazel query ...); do
          if [[ "{$target}" == *":_wasm_"* ]]; then
            # skip wasm transition target
            continue
          fi
          if [[ "${target}" != *".wasm" ]]; then
            # Build wasm modules only
            continue
          fi
          "${GITHUB_WORKSPACE}/bin/bazel" build "${target}"
        done

    - name: Unit Test
      run: |
        "${GITHUB_WORKSPACE}/bin/bazel" test --test_output=errors //...

    - name: Integration Test
      run: |
        set -eux

        BRANCH_NAME=$(echo "${GITHUB_BASE_REF}" | cut -d "/" -f3)
        export ISTIO_TEST_VERSION=${BRANCH_NAME#"release-"}
        go test ./test/...

    - name: Build Example
      run: |
        set -eux
        cd example
        bazel build //:example.wasm

    - name: Example Integration Test
      run: |
        set -eux

        BRANCH_NAME=$(echo "${GITHUB_BASE_REF}" | cut -d "/" -f3)
        export ISTIO_TEST_VERSION=${BRANCH_NAME#"release-"}
        go test ./example/...
